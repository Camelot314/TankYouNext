using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class Enemy : MonoBehaviour
{
    #region Variables
    #region Static Varaibles
    private static bool freeze = false; // if this is true then all enemies will freeze.
    #endregion

    #region Instance Variables
    [Header("Movement Attributes")]
    [SerializeField] [Range(0f, 10f)] private float movementSpeed;  // This is the movement speed of the enemy. Done in the inspector.

    [Header("Collision Attributes")]
    [SerializeField] private LayerMask playerMask;                  // This is the layer mask that is used by the Physics overlapped methods
                                                                    // to determine where collisions occur. It should not include the camera layer, the enemy
                                                                    // layer or the ignore collision layer. 

    [SerializeField] private Transform right, left;                                 // The transfrom of the left and right positions that the overlapped sphere will check. 
    [SerializeField] [Range(0f, 1f)] private float overlappedSphereRadius = 0.1f;   // The radius of the overlapped sphere. 


    private Vector3 rightVel, leftVel, prePuasedVel = Vector3.zero; // Preset vector that will become the velocity when it is moving to the right and left. 
                                                                    //      rightVel = - leftVel. prePausedVel is the velocity before the game was paused so it can 
                                                                    //      reset the velocity

    private Rigidbody body;                                         // Rigid body of the enemy game object.
    #endregion
    #endregion

    #region Static Methods
    /// <summary>
    /// Static method that sets the freeze static variable for all enemies. If freeze is
    /// true then none of the enemies will move or perform the pause camera methods.
    /// </summary>
    /// <param name="freeze"></param>
    public static void Freeze(bool freeze)
    {
        Enemy.freeze = freeze;
    }

    #endregion


    #region Unity Methods
    // Start is called before the first frame update
    void Start()
    {
        body = gameObject.GetComponent<Rigidbody>();
        rightVel = new Vector3(movementSpeed, 0, 0);
        leftVel = new Vector3(-movementSpeed, 0, 0);
        
        if (!freeze) {
            body.velocity = rightVel;
        }

        if (right == null)
        {
            Debug.LogError("transform for right is null");
        }

        if (left == null)
        {
            Debug.LogError("transfrom for left is null");
        }


    }

    /// <summary>
    /// If the freeze variable is true then it will make the enemy 
    /// kinematic to freeze the enemy in place. It will then unfreeze
    /// if it is kinematic and freeze is false. 
    /// </summary>
    private void Update()
    {
        if (freeze && !body.isKinematic)
        {
            prePuasedVel = body.velocity;
            body.isKinematic = true;

        }

        if (body.isKinematic && !freeze)
        {
            body.isKinematic = false;
            body.velocity = prePuasedVel;
        }
    }

    /// <summary>
    /// Method that is called when something hits the enemy. It will
    /// frist check whether the freeze variable is true. If it is then
    /// it will do nothing. It will then create 2 arrays of collided objects
    /// left and right. They correspond to the objects that are within the 
    /// overlapped sphere at the specified transformed. They can be visualized by 
    /// enabling the mesh renderer of the spheres in the inspector. It will then 
    /// check if the arrays contain the player. If it does then it will pause the camera.
    /// </summary>
    /// <param name="collision">The collision object generated by unity.</param>
    private void OnCollisionEnter(Collision collision)
    {
        if (freeze)
        {
            return;
        }

        Collider[] rightArray, leftArray;
        rightArray = Physics.OverlapSphere(right.position, overlappedSphereRadius, playerMask);
        leftArray = Physics.OverlapSphere(left.position, overlappedSphereRadius, playerMask);
        bool rightHit = rightArray.Length != 0, leftHit = leftArray.Length != 0;

        if (rightHit)
        {
            body.velocity = leftVel;
            PauseCamera(collision.collider);
        } else if (leftHit)
        {
            body.velocity = rightVel;
            PauseCamera(collision.collider);
        }

    }
    #endregion

    #region Private Methods
    /// <summary>
    /// This method is called every time the enemy collides with something on the side.
    /// It will check if the player is the object it collided with and if it is then it 
    /// will pause the camera. Effectively ending the game because the player "died".
    /// </summary>
    /// <param name="collider">The collider of the object that collided with the enemy</param>
    private void PauseCamera(Collider collider)
    {
        if (collider.CompareTag("Player"))
        {
            CameraScript.ForcePaused(true);
            Freeze(true);
            Level.SetEnd(true);
        }
    }
    #endregion
        
}
